// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.8
// source: webhook.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// WebhookClient is the client API for Webhook service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WebhookClient interface {
	Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateRes, error)
}

type webhookClient struct {
	cc grpc.ClientConnInterface
}

func NewWebhookClient(cc grpc.ClientConnInterface) WebhookClient {
	return &webhookClient{cc}
}

func (c *webhookClient) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateRes, error) {
	out := new(CreateRes)
	err := c.cc.Invoke(ctx, "/scraphook.admin.dashboard.v1.Webhook/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebhookServer is the server API for Webhook service.
// All implementations must embed UnimplementedWebhookServer
// for forward compatibility
type WebhookServer interface {
	Create(context.Context, *CreateReq) (*CreateRes, error)
	mustEmbedUnimplementedWebhookServer()
}

// UnimplementedWebhookServer must be embedded to have forward compatible implementations.
type UnimplementedWebhookServer struct {
}

func (UnimplementedWebhookServer) Create(context.Context, *CreateReq) (*CreateRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedWebhookServer) mustEmbedUnimplementedWebhookServer() {}

// UnsafeWebhookServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WebhookServer will
// result in compilation errors.
type UnsafeWebhookServer interface {
	mustEmbedUnimplementedWebhookServer()
}

func RegisterWebhookServer(s grpc.ServiceRegistrar, srv WebhookServer) {
	s.RegisterService(&Webhook_ServiceDesc, srv)
}

func _Webhook_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scraphook.admin.dashboard.v1.Webhook/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookServer).Create(ctx, req.(*CreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Webhook_ServiceDesc is the grpc.ServiceDesc for Webhook service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Webhook_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "scraphook.admin.dashboard.v1.Webhook",
	HandlerType: (*WebhookServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Webhook_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "webhook.proto",
}
